@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Root Entity for RAP Business Object for Compostion tree'
define root view entity ZEY_AO_I_M_TRAVEL as select from /dmo/travel  
composition[1..*] of ZEY_AO_I_M_BOOKING as _Bookings 
association[0..1] to ZEY_AO_U_AGENCY as _Agency on
$projection.AgencyId = _Agency.AgencyId
association[0..1] to ZEY_AO_U_CUSTOMER as _Customer on
$projection.CustomerId = _Customer.CustomerId
association[0..1] to I_Currency as _Currency on
$projection.CurrencyCode = _Currency.Currency

{
    key /dmo/travel.travel_id as TravelId,
    @Consumption.valueHelpDefinition: [{entity: {name: 'ZEY_AO_U_AGENCY', element: 'AgencyId'} }]
    /dmo/travel.agency_id as AgencyId,
    @Consumption.valueHelpDefinition: [{entity: {name: 'ZEY_AO_U_CUSTOMER', element: 'CustomerId'} }]
    /dmo/travel.customer_id as CustomerId,
    /dmo/travel.begin_date as BeginDate,
    /dmo/travel.end_date as EndDate,
    @Semantics.amount.currencyCode: 'CurrencyCode'
    /dmo/travel.booking_fee as BookingFee,
    @Semantics.amount.currencyCode: 'CurrencyCode'
    /dmo/travel.total_price as TotalPrice,
    /dmo/travel.currency_code as CurrencyCode,
    /dmo/travel.description as Description,
    /dmo/travel.status as Status,
    @Semantics.user.createdBy: true
    /dmo/travel.createdby as Createdby,
    @Semantics.systemDateTime.createdAt: true
    /dmo/travel.createdat as Createdat,
    @Semantics.user.lastChangedBy: true
    /dmo/travel.lastchangedby as Lastchangedby,
    @Semantics.systemDateTime.lastChangedAt: true
    /dmo/travel.lastchangedat as Lastchangedat,
    _Bookings, // Make association public
    _Agency,
    _Customer,
    _Currency
}


@EndUserText.label: 'Travel Approver'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@UI.headerInfo:{
    typeName: 'Travel',
    typeNamePlural: 'Travels',
    title: {value: 'TravelId', label: 'Travel ID'},
    description: { label: 'Description', value: 'Description'}
}
@Search.searchable: true
@Metadata.allowExtensions: true
define root view entity ZEY_AO_I_M_TRAVEL_APPROVER as projection on ZEY_AO_I_M_TRAVEL {
    @Search.defaultSearchElement: true
        @ObjectModel.text.element: ['Description']
    key TravelId,
    @Search.defaultSearchElement: true
    @Consumption.valueHelpDefinition: [{entity: {name: 'ZCE_RAP_AGENCY_AO', element: 'AgencyId'} }]
        @ObjectModel.text.element: ['AgencyName']
    AgencyId,
    @Search.defaultSearchElement: true
    @Consumption.valueHelpDefinition: [{entity: {name: 'ZEY_AO_U_CUSTOMER', element: 'CustomerId'} }]
    @ObjectModel.text.element: ['CustomerName']
    CustomerId,
    _Agency.Name as AgencyName,
    _Customer.FirstName as CustomerName,
    BeginDate,
    EndDate,
    BookingFee,
    TotalPrice,
    CurrencyCode,
    Description,
    Status,
    Createdby,
    Createdat,
    Lastchangedby,
    Lastchangedat,
    /* Associations */
    _Agency,
    _Bookings: redirected to composition child ZEY_AO_I_M_BOOKING_APPROVER,
    _Currency,
    _Customer
}



@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Entity for composition with Travel'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity ZEY_AO_I_M_BOOKING as select from /dmo/booking as Booking
composition[0..*] of ZEY_AO_I_M_BOOK_SUPPL as _BookSuppl 
association to parent ZEY_AO_I_M_TRAVEL as _Travel on
$projection.TravelId = _Travel.TravelId
association[1..1] to ZEY_AO_U_CUSTOMER as _Customer on 
$projection.CustomerId = _Customer.CustomerId
association[1..1] to /DMO/I_Carrier as _Carrier on
$projection.CarrierId = _Carrier.AirlineID
association[1..1] to /DMO/I_Connection as _Connection on
$projection.CarrierId = _Connection.AirlineID and
$projection.ConnectionId = _Connection.ConnectionID
{
    key Booking.travel_id as TravelId,
    key Booking.booking_id as BookingId,
    Booking.booking_date as BookingDate,
    Booking.customer_id as CustomerId,
    Booking.carrier_id as CarrierId,
    Booking.connection_id as ConnectionId,
    Booking.flight_date as FlightDate,
    @Semantics.amount.currencyCode: 'CurrencyCode'
    Booking.flight_price as FlightPrice,
    Booking.currency_code as CurrencyCode,
    @UI.hidden: true
    _Travel.Lastchangedat,
    _Travel,
    _Customer,
    _Carrier,
    _Connection,
    _BookSuppl
    
    
}


@EndUserText.label: 'Booking Projection'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@UI.headerInfo:{
    typeName: 'Booking',
    typeNamePlural: 'Bookings',
    title: {value: 'BookingId', label: 'Booking Id'},
    description: { label: 'Airline', value: 'CarrierId'}
}
@Metadata.allowExtensions: true
define view entity ZEY_AO_I_M_BOOKING_APPROVER as projection on ZEY_AO_I_M_BOOKING {
    key TravelId,
    key BookingId,
    BookingDate,
    CustomerId,
    CarrierId,
    ConnectionId,
    FlightDate,
    FlightPrice,
    CurrencyCode,
    Lastchangedat,
    /* Associations */
    _Carrier,
    _Connection,
    _Customer,
    _Travel: redirected to parent ZEY_AO_I_M_TRAVEL_APPROVER,
    _BookSuppl: redirected to composition child ZEY_AO_I_M_BK_SUPP_APPROVER
}


@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Booking Supplements'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity ZEY_AO_I_M_BOOK_SUPPL as select from /dmo/book_suppl as BookSuppl
association to parent ZEY_AO_I_M_BOOKING as _Bookings
on $projection.TravelId = _Bookings.TravelId and
   $projection.BookingId = _Bookings.BookingId
association[1] to ZEY_AO_I_M_TRAVEL as _Travel
on $projection.TravelId = _Travel.TravelId   
{
    key travel_id as TravelId,
    key booking_id as BookingId,
    key booking_supplement_id as BookingSupplementId,
    supplement_id as SupplementId,
    @Semantics.amount.currencyCode: 'CurrencyCode'
    price as Price,
    currency_code as CurrencyCode,
    _Travel,
    _Bookings
    
}


@EndUserText.label: 'Projection on booking supplements'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@Search.searchable: true
@Metadata.allowExtensions: true
define view entity ZEY_AO_I_M_BK_SUPP_APPROVER as projection on ZEY_AO_I_M_BOOK_SUPPL {
    @Search.defaultSearchElement: true
    key TravelId,
    @Search.defaultSearchElement: true
    key BookingId,
    @Search.defaultSearchElement: true
    key BookingSupplementId,
    SupplementId,
    @Semantics.amount.currencyCode: 'CurrencyCode'
    Price,
    CurrencyCode,
    /* Associations */
    _Bookings : redirected to parent ZEY_AO_I_M_BOOKING_APPROVER,
    _Travel
}



@Metadata.layer: #CUSTOMER
annotate view ZEY_AO_I_M_TRAVEL_APPROVER
    with 
{
    @UI.facet: [{
        id: 'Travel',
        purpose: #STANDARD,
        type: #IDENTIFICATION_REFERENCE,
        label: 'Travel Info',
        position: 10
     },{ 
        id: 'Booking',
        purpose: #STANDARD,
        type: #LINEITEM_REFERENCE,
        label: 'Booki8ng',
        position: 20,
        targetElement: '_Bookings'
     }]
    
    @UI: {  selectionField: [{position: 10 }],
            lineItem: [{position: 10 }],
            identification: [{position: 10 }]
          }
    TravelId;
    @UI: {  selectionField: [{position: 20 }],
            lineItem: [{position: 20 }],
            identification: [{position: 20 }]
          }
    AgencyId;
    @UI: {  selectionField: [{position: 30 }],
            lineItem: [{position: 30 }],
            identification: [{position: 30 }]
          }
    CustomerId;
    @UI: { 
            lineItem: [{position: 40 }],
            identification: [{position: 40 }]
          }
    BeginDate;
    @UI: { 
           
            identification: [{position: 50 }]
          }
    EndDate;
    @UI: { 
           
            identification: [{position: 60 }]
          }
    BookingFee;
    @UI: { 
            lineItem: [{position: 50 }],
            identification: [{position: 70 }]
          }
    TotalPrice;
    
    @UI: { 
            selectionField: [{position: 40 }],
            lineItem: [{position: 60, importance: #HIGH },
                       { type: #FOR_ACTION, dataAction: 'acceptTravel', label: 'Accept Travel' },
                       { type: #FOR_ACTION, dataAction: 'rejectTravel', label: 'Reject Travel' }
            
            ],
            identification: [{position: 80 },
            { type: #FOR_ACTION, dataAction: 'acceptTravel', label: 'Accept Travel' },
                       { type: #FOR_ACTION, dataAction: 'rejectTravel', label: 'Reject Travel' }]
          }
    @EndUserText.label: 'Travel Status'
    Status;
    @UI.identification: [{position: 90 }]
    Createdby;
    @UI.identification: [{position: 100 }]
    Createdat;
 
    
    
}


@Metadata.layer: #CUSTOMER
annotate view ZEY_AO_I_M_BOOKING_APPROVER
    with 
{
    @UI.facet: [{
        id: 'BookingData',
        purpose: #STANDARD,
        type: #IDENTIFICATION_REFERENCE,
        label: 'Booking Data',
        position: 10    
     },{ 
        id: 'BookingSupplement',
        purpose: #STANDARD,
        type: #LINEITEM_REFERENCE,
        position: 20,
        label: 'Booking Supplement',
        targetElement: '_BookSuppl'
     
     }]
    TravelId;
    @UI: { lineItem: [{position: 10 }],
           identification: [{position: 10 }] }
    BookingId;
    @UI: { lineItem: [{position: 20 }],
           identification: [{position: 20 }] }
    BookingDate;
    @UI: { lineItem: [{position: 30 }],
           identification: [{position: 30 }] }
    CustomerId;
    @UI: { lineItem: [{position: 40 }],
           identification: [{position: 40 }] }
    CarrierId;
    @UI: { lineItem: [{position: 50 }],
           identification: [{position: 50 }] }
    ConnectionId;
    @UI: { lineItem: [{position: 60 }],
           identification: [{position: 60 }] }
    FlightDate;
    @UI: { lineItem: [{position: 70 }],
           identification: [{position: 70 }] }
    FlightPrice;
    
}

@Metadata.layer: #CUSTOMER
annotate view ZEY_AO_I_M_BK_SUPP_APPROVER
    with 
{
    @UI.facet: [{ 
        id: 'BookingSuppl',
        position: 10,
        purpose: #STANDARD,
        type: #IDENTIFICATION_REFERENCE,
        label: 'Details'
    }]
    @UI.identification: [{position: 10 }]
    @UI.lineItem: [{position: 10 }]
    TravelId;
    @UI.identification: [{position: 20 }]
    @UI.lineItem: [{position: 20 }]
    BookingId;
    @UI.identification: [{position: 30 }]
    @UI.lineItem: [{position: 30 }]
    BookingSupplementId;
    @UI.identification: [{position: 30 }]
    @UI.lineItem: [{position: 30 }]
    SupplementId;
    @UI.identification: [{position: 40 }]
    @UI.lineItem: [{position: 40 }]
    Price;
    
}



managed ; //implementation in class zbp_ey_ao_i_m_travel ;
strict ( 2 );
with draft;

define behavior for ZEY_AO_I_M_TRAVEL alias Travel
implementation in class zbp_ey_ao_i_m_travel unique
draft table zey_ao_d_trav
persistent table /DMO/TRAVEL
lock master
total etag Lastchangedat
    authorization master ( global )
etag master Lastchangedat
early numbering
{
  create;
  update;
  delete;
  association _Bookings { create; with draft; }

  field( readonly ) lastchangedat, Lastchangedby, Createdat, Createdby;
  field( mandatory ) AgencyId, CustomerId, BeginDate, EndDate;
  field ( features:instance ) travelid;

  action createTravelByTemplate result [1] $self;

  action( features: instance ) acceptTravel result[1] $self;
  action( features: instance ) rejectTravel result[1] $self;

  validation validateCustomer on save { field customerid; create; }
  validation validateDates on save { field begindate, enddate; create; }
  validation validateStatus on save { field status; }

  draft action Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare{
    validation validateCustomer;
    validation validateDates;
    validation validateStatus;
  }

  mapping for /dmo/travel{
    AgencyId = agency_id;
    BeginDate = begin_date;
    BookingFee = booking_fee;
    CurrencyCode = currency_code;
    CustomerId = customer_id;
    EndDate = end_date;
    Lastchangedat = lastchangedat;
    Description = description;
    Status = status;
    TotalPrice = total_price;
    TravelId = travel_id;
    CreatedBy = createdby;
    Lastchangedby = lastchangedby;
    Createdat = createdat;
  }
}

define behavior for ZEY_AO_I_M_BOOKING alias Booking
implementation in class zbp_ey_ao_i_m_booking unique
draft table zey_ao_d_book
persistent table /dmo/booking
lock dependent by _Travel
authorization dependent by _Travel
etag master Lastchangedat
early numbering
{
  update;
  delete;
  field ( readonly ) TravelId;
  association _Travel { with draft; }
  association _BookSuppl { create; with draft; }

  field( mandatory ) CarrierId, ConnectionId, BookingDate;
  field ( features : instance ) bookingid, bookingdate, customerid;

  determination calculateTotalFlightPrice on modify { field flightprice, currencycode; create; }

  mapping for /dmo/booking{
    BookingId = booking_id;
    TravelId = travel_id;
    BookingDate = booking_date;
    CustomerId = customer_id;
    CarrierId = carrier_id;
    ConnectionId = connection_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    CurrencyCode = currency_code;
  }
}


define behavior for ZEY_AO_I_M_BOOK_SUPPL alias BookingSupplement
implementation in class zbp_ey_ao_i_m_booksppl unique
draft table zey_ao_d_book_su
persistent table /dmo/book_suppl
lock dependent by _Travel
authorization dependent by _Travel

{
  update;
  delete;
  field ( readonly ) TravelId;
  association _Bookings { with draft; }
  association _Travel { with draft; }

  field( readonly ) BookingId, BookingSupplementId, Price, SupplementId;

  mapping for /dmo/book_suppl{
    BookingId = booking_id;
    TravelId = travel_id;
    BookingSupplementId = booking_supplement_id;
    CurrencyCode = currency_code;
    Price = price;
    SupplementId = supplement_id;
  }
}



projection;
strict ( 2 );
//use draft;

define behavior for ZEY_AO_I_M_TRAVEL_APPROVER alias Travel
{
  field(readonly) TravelId, BeginDate, EndDate, CustomerId, TotalPrice;
  //use create;
  use update;
  //use delete;

  ///use action createTravelByTemplate;
  use action acceptTravel;
  use action rejectTravel;


  //use association _Bookings { create; with draft; }
}

//define behavior for ZEY_AO_I_M_BOOKING_APPROVER //alias <alias_name>
//{
//  use update;
//  use delete;
//
//  use association _Travel { with draft; }
//}



@EndUserText.label: 'travel approver service definition'
define service ZEY_AO_SD_TRAVEL_APPROVER {
  expose ZEY_AO_I_M_TRAVEL_APPROVER as Travel;
  expose ZEY_AO_I_M_BOOKING_APPROVER as Bookings;
  expose ZEY_AO_I_M_BK_SUPP_APPROVER as BookingSupplement;
  expose ZEY_AO_U_AGENCY as Agency;
  expose ZEY_AO_U_CUSTOMER as Customer;
  expose I_Currency as Currency;
}



