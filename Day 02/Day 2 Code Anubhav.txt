1. Created the structure

@AbapCatalog.enhancement.category : #EXTENSIBLE_ANY
define structure zey_ao_admin_data {
  created_by : syuname;
  created_on : timestamp;
  changed_by : syuname;
  changed_on : timestamp;

}

2. Adapt the SO and SO_I Table

@AbapCatalog.enhancement.category : #EXTENSIBLE_ANY

define table zey_ao_so {
  key client   : abap.clnt not null;
  key order_id : zey_ao_dte_id not null;
  order_no     : abap.int4;
  @AbapCatalog.foreignKey.screenCheck : false
  buyer        : zey_ao_dte_id not null
    with foreign key [0..*,1] zey_ao_bpa
      where bp_id = zey_ao_so.buyer;
  @Semantics.amount.currencyCode : 'zey_ao_so.currency'
  gross_amount : abap.curr(10,2);
  currency     : abap.cuky;
  include zey_ao_admin_data;

}

define table zey_ao_so_i {
  key client  : abap.clnt not null;
  key item_id : zey_ao_dte_id not null;
  order_id    : zey_ao_dte_id not null;
  @AbapCatalog.foreignKey.screenCheck : false
  product     : zey_ao_dte_id not null
    with foreign key [0..*,1] zey_ao_product
      where product_id = zey_ao_so_i.product;
  @Semantics.amount.currencyCode : 'zey_ao_so_i.currency'
  amount      : abap.curr(10,2);
  currency    : abap.cuky;
  @Semantics.quantity.unitOfMeasure : 'zey_ao_so_i.unit'
  quantity    : abap.quan(2,1);
  unit        : abap.unit(2);
  include zey_ao_admin_data;

}

3. Execute the class, Right Click Run As..-> ABAP Application


CLASS zey_ao_data_gen DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_oo_adt_classrun .
  PROTECTED SECTION.
  PRIVATE SECTION.
    METHODS fill_master_data.
    METHODS flush.
    METHODS fill_transaction_data.
ENDCLASS.



CLASS zey_ao_data_gen IMPLEMENTATION.


  METHOD if_oo_adt_classrun~main.
        me->flush( ).
        me->fill_master_data( ).
        me->fill_transaction_data(  ).
        out->write( 'Execution completed, Watch out the data in tables' ).
  ENDMETHOD.

  METHOD fill_transaction_data.

        data : o_rand type REF TO cl_abap_random_int,
               n type i,
               seed type i,
               lv_date type timestamp,
               lv_ord_id type zey_ao_dte_id,
               lt_so type table of zey_ao_so,
               lt_so_i type table of zey_ao_so_i.

        seed = cl_abap_random=>seed( ).
        cl_abap_random_int=>create(
          EXPORTING
            seed = seed
            min  = 1
            max  = 7
          RECEIVING
            prng = o_rand
        ).
        get time stamp FIELD lv_date.

        select * from zey_ao_bpa into table @data(lt_bp).
        select * from zey_ao_product into table @data(lt_prod).

        do 10 times.
            lv_ord_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32(  ).
            n = o_rand->get_next( ).
            read table lt_bp into data(ls_bp) INDEX n.
            append value #( order_id = lv_ord_id
                            order_no = sy-index
                            buyer = ls_bp-bp_id
                            gross_amount = n * 100
                            currency = 'INR'
                            created_by = sy-uname
                            created_on = lv_date
                            changed_by = sy-uname
                            changed_on = lv_date
                         )  to lt_so.
            do 2 times.
                read table lt_prod into data(ls_product) INDEX n.
                n = o_rand->get_next( ).
                append value #( order_id = lv_ord_id
                            item_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32(  )
                            product = ls_product-product_id
                            quantity = n
                            unit = 'PC'
                            amount = n * ls_product-price
                            currency = 'INR'
                            created_by = sy-uname
                            created_on = lv_date
                            changed_by = sy-uname
                            changed_on = lv_date
                         )  to lt_so_i.
            ENDDO.
        ENDDO.

        insert zey_ao_so from table @lt_so.
        insert zey_ao_so_i from table @lt_so_i.

    ENDMETHOD.
    METHOD fill_master_data.

        data: lt_bp type TABLE of zey_ao_bpa,
              lt_prod type table of zey_ao_product.

        append value #(
                    bp_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    bp_role = '01'
                    company_name = 'TACUM'
                    street = 'Victoria Street'
                    city = 'Kolkatta'
                    country = 'IN'
                    region = 'APJ'
                    )
                    to lt_bp.
    append value #(
                    bp_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    bp_role = '01'
                    company_name = 'SAP'
                    street = 'Rosvelt Street Road'
                    city = 'Walldorf'
                    country = 'DE'
                    region = 'EMEA'
                    )
                    to lt_bp.
    append value #(
                    bp_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    bp_role = '01'
                    company_name = 'Asia High tech'
                    street = '1-7-2 Otemachi'
                    city = 'Tokyo'
                    country = 'JP'
                    region = 'APJ'
                    )
                    to lt_bp.
    append value #(
                    bp_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    bp_role = '01'
                    company_name = 'AVANTEL'
                    street = 'Bosque de Duraznos'
                    city = 'Maxico'
                    country = 'MX'
                    region = 'NA'
                    )
                    to lt_bp.
    append value #(
                    bp_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    bp_role = '01'
                    company_name = 'Pear Computing Services'
                    street = 'Dunwoody Xing'
                    city = 'Atlanta, Georgia'
                    country = 'US'
                    region = 'NA'
                    )
                    to lt_bp.
    append value #(
                    bp_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    bp_role = '01'
                    company_name = 'PicoBit'
                    street = 'Fith Avenue'
                    city = 'New York City'
                    country = 'US'
                    region = 'NA'
                    )
                    to lt_bp.
    append value #(
                    bp_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    bp_role = '01'
                    company_name = 'TACUM'
                    street = 'Victoria Street'
                    city = 'Kolkatta'
                    country = 'IN'
                    region = 'APJ'
                    )
                    to lt_bp.
    append value #(
                    bp_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    bp_role = '01'
                    company_name = 'Indian IT Trading Company'
                    street = 'Nariman Point'
                    city = 'Mumbai'
                    country = 'IN'
                    region = 'APJ'
                    )
                    to lt_bp.

   append value #(
                    product_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    name = 'Blaster Extreme'
                    category = 'Speakers'
                    price = 175
                    currency = 'INR'
                    discount = 3
                    )
                    to lt_prod.
    append value #(
                    product_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    name = 'Sound Booster'
                    category = 'Speakers'
                    price = 250
                    currency = 'INR'
                    discount = 2
                    )
                    to lt_prod.
    append value #(
                    product_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    name = 'Smart Office'
                    category = 'Software'
                    price = 154
                    currency = 'INR'
                    discount = 32
                    )
                    to lt_prod.
    append value #(
                    product_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    name = 'Smart Design'
                    category = 'Software'
                    price = 240
                    currency = 'INR'
                    discount = 12
                    )
                    to lt_prod.
    append value #(
                    product_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    name = 'Transcend Carry pocket'
                    category = 'PCs'
                    price = 140
                    currency = 'INR'
                    discount = 7
                    )
                    to lt_prod.
    append value #(
                    product_id = cl_uuid_factory=>create_system_uuid( )->create_uuid_c32( )
                    name = 'Gaming Monster Pro'
                    category = 'PCs'
                    price = 155
                    currency = 'INR'
                    discount = 8
                    )
                    to lt_prod.

        INSERT zey_ao_bpa from table @lt_bp.
        INSERT zey_ao_product from table @lt_prod.
    ENDMETHOD.
    METHOD flush.
        delete from: zey_ao_bpa, zey_ao_product, zey_ao_so, zey_ao_so_i.
    ENDMETHOD.
ENDCLASS.



----------------------------------------Starting of CDS views
1. Business partner CDS View

@AbapCatalog.sqlViewName: 'ZEYAOIBP'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Business Partner Basic, Interface'
define view ZEY_AO_I_BP as select from zey_ao_bpa {
    key bp_id as BpId,
    bp_role as BpRole,
    company_name as CompanyName,
    street as Street,
    city as City,
    country as Country,
    region as Region
}



2. Product CDS View


@AbapCatalog.sqlViewName: 'ZEYAOIPROD'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'product basic, interface'
define view zey_ao_i_product as select from zey_ao_product {
    key product_id as ProductId,
    name as Name,
    category as Category,
    price as Price,
    currency as Currency,
    discount as Discount
}


3. Sales Order Composite CDS view


@AbapCatalog.sqlViewName: 'ZEYAOCOSLS'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Sales order header composite'
define view zey_ao_co_salesorder as select from zey_ao_so 
association[1] to ZEY_AO_I_BP as _BusinessPartner on
$projection.Buyer = _BusinessPartner.BpId
{
    key zey_ao_so.order_id as OrderId,
    zey_ao_so.order_no as OrderNo,
    zey_ao_so.buyer as Buyer,
    zey_ao_so.gross_amount as GrossAmount,
    zey_ao_so.currency as Currency,
    zey_ao_so.created_by as CreatedBy,
    zey_ao_so.created_on as CreatedOn,
    zey_ao_so.changed_by as ChangedBy,
    zey_ao_so.changed_on as ChangedOn,
    _BusinessPartner
}


4. Composite view for sales order items, product and header data

@AbapCatalog.sqlViewName: 'ZEYAOCOSALES'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Sales order details'
define view ZEY_AO_CO_SALES as select from zey_ao_so_i 
association[0..1] to zey_ao_product as _Products on
$projection.Product = _Products.product_id
association[0..1] to zey_ao_co_salesorder as _OrderHeader on
$projection.OrderId = _OrderHeader.OrderId
{
    key zey_ao_so_i.item_id as ItemId,
    zey_ao_so_i.order_id as OrderId,
    zey_ao_so_i.product as Product,
    zey_ao_so_i.amount as Amount,
    zey_ao_so_i.currency as Currency,
    zey_ao_so_i.quantity as Quantity,
    zey_ao_so_i.unit as Unit,
    zey_ao_so_i.created_by as CreatedBy,
    zey_ao_so_i.created_on as CreatedOn,
    zey_ao_so_i.changed_by as ChangedBy,
    zey_ao_so_i.changed_on as ChangedOn,
    _Products,
    _OrderHeader
}


5. Consumption view, Requirement - Total sales per country

@AbapCatalog.sqlViewName: 'ZEYAOCSLSC'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Sales Per country'
define view ZEY_AO_C_SALES_PER_COUNTRY as select from ZEY_AO_CO_SALES {
    key _OrderHeader._BusinessPartner.Country,
    sum( _OrderHeader.GrossAmount ) as TotalSales,
    _OrderHeader.Currency
} group by _OrderHeader._BusinessPartner.Country, _OrderHeader.Currency


6. CDS entity example Consumption

@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Quantity Per product'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity ZEY_AO_C_QTY_PER_PROD as select from ZEY_AO_CO_SALES {
    key _Products.name,
    @Semantics.quantity.unitOfMeasure: 'Unit'
    sum(Quantity) as TotalSold,
    Unit
} group by Unit, _Products.name


7. AMDP

CLASS zcl_ey_ao_amdp DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_amdp_marker_hdb .
    CLASS-METHODS getproductData
    IMPORTING
        VALUE(p_id) type zey_ao_dte_id
    EXPORTING
        value(e_price) type int4
        value(e_discounted_price) type int4.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_ey_ao_amdp IMPLEMENTATION.
  METHOD getproductdata by DATABASE PROCEDURE FOR HDB LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY using zey_ao_product.

    declare lv_price, lv_discount integer;
    select price, discount into lv_price, lv_discount
    from zey_ao_product where product_id = :p_id;

    e_price = :lv_price;
    e_discounted_price = ( :lv_price * ( 100 - :lv_discount ) / 100 );

  ENDMETHOD.

ENDCLASS.

8. Testing AMDP

CLASS zcl_ey_ao_test DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_oo_adt_classrun .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_ey_ao_test IMPLEMENTATION.


  METHOD if_oo_adt_classrun~main.

    data: lv_price type int4,
          lv_dis_price type int4.

      zcl_ey_ao_amdp=>getproductdata(
        EXPORTING
          p_id               = '6ED48F210DBC1EDD92A2DB1634AAE142'
        IMPORTING
          e_price            =  lv_price
          e_discounted_price = lv_dis_price
      ).

    out->write(
      EXPORTING
        data   = |The price and discounted is here { lv_price } and { lv_dis_price }|
*        name   =
*      RECEIVING
*        output =
    ).

  ENDMETHOD.
ENDCLASS.

9. Service definition

@EndUserText.label: 'Sales Service Definition'
define service ZEY_AO_SD_SALES {
  expose ZEY_AO_CO_SALES as SalesDataSet;
}

10. Create service binding by right clicking on service definition

